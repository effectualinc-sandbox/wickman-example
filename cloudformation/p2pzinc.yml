---
AWSTemplateFormatVersion: '2010-09-09'
Description: LSI P2P zinc EC2s Hosts

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - pVPC
          - pSubnetA
          - pSubnetB
          - pEfsDns
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - pInstanceType
          - pInstanceId1
          - pVolumeSize1
          - pVolumeSize2
          - pCustomerName
          - pApplicationName
          - pEnvironment
          - pGitUrl

    ParameterLabels:
      pVPC:
        default: VPC
      pSubnetA:
        default: Subnet A
      pSubnetB:
        default: Subnet B
      pInstanceType:
        default: Instance Type
      pInstanceId1:
        default: Instance ID 1
      pVolumeSize1:
        default: Volume Size 1
      pVolumeSize2:
        default: Volume Size 2
      pEfsDns:
        default: EFS DNS
      pCustomerName:
        default: Customer
      pApplicationName:
        default: Application Name Tag
      pEnvironment:
        default: Environment
      pGitUrl:
        default: Code URL


Parameters:
  pSubnetA:
    Description: The subnet to launch the instance in to. It must be part of the VPC
      chosen above.
    Type: AWS::EC2::Subnet::Id
  pSubnetB:
    Description: The subnet to launch the instance in to. It must be part of the VPC
      chosen above.
    Type: AWS::EC2::Subnet::Id
  pInstanceType:
    Description: Desired Instance Size
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.large
      - t2.small
  pVolumeSize1:
    Description: Enter the number of GBs you want your volume to be. The minimum value
      is 8 GBs
    Type: Number
    Default: 100
    MinValue: 8
  pVolumeSize2:
    Description: Enter the number of GBs you want your volume to be. The minimum value
      is 8 GBs
    Type: Number
    Default: 100
    MinValue: 8
  pInstanceId1:
    Description: "Do not change this parameter"
    Type: AWS::EC2::Image::Id
    Default: "ami-0d5eff06f840b45e9"
  pVPC:
    Description: VPC Id for deployment
    Type: AWS::EC2::VPC::Id
  pEfsDns:
    Description: EFS DNS
    Type: String
    Default: "fs-d83a425b.efs.us-east-1.amazonaws.com"
  pEnvironment:
    Type: String
    Description: "Environment tag representing Production, Development, QA, Staging, or DR"
    AllowedValues:
      - Production
      - Development
      - QA
      - Stage
      - DR
    Default: DR
  pGitUrl:
    Type: String
    Description: The Project URL for the template
    Default: "https://gitlab.com/effectualinc/proserv/logicsource/p2p/p2p"
  pApplicationName:
    Description: "Required: Application name used for tagging resources"
    Type: String
    Default: "p2p"
  pCustomerName:
    Type: String
    Description: "Customer name for tagging resources"
    Default: "logicsource"

Rules:
  SubnetInVPC:
    Assertions:
      - Assert: !EachMemberIn
          - !ValueOfAll
            - AWS::EC2::Subnet::Id
            - VpcId
          - !RefAll "AWS::EC2::VPC::Id"
        AssertDescription: All subnets must in the VPC

Resources:

  rP2pSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: P2P security group
      VpcId: !Ref pVPC
      SecurityGroupIngress:
          Value: !Ref pCustomerName
        - Key: Environment
          Value: !Ref pEnvironment
        - Key: Code Uri
          Value: !Ref pGitUrl
        - Key: Application
          Value: !Ref pApplicationName
        - Key: allowChangeState
          Value: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          setenforce permissive
          cd /root/
          yum install git -y
          ## EFS Setup
          mkdir -p /usr/local/fileshare
          echo "${pEfsDns}:/ /usr/local/fileshare nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev 0 0" >> /etc/fstab
          mount -a

  rEc2p2pRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub p2p-${AWS::StackName}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagenstanceCore
      - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy

        rEc2p2pRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub p2p-${AWS::StackName}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
      - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy  rEc2p2pRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub p2p-${AWS::StackName}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
      - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy  rEc2p2pRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub p2p-${AWS::StackName}
      AssumeRolePolicyDocument:
        Statement:






        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
      - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy  rEc2p2pRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub p2p-${AWS::StackName}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
      - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy

  rEc2p2pProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub "p2p-IP-${AWS::StackName}"







      Roles:
      - !Ref rEc2p2pRole

Outputs:
  oInstanceId:
    Description: Resource ID of the newly created EC2 instance
    Value: !Ref rProApp1Ec2



    hey ross did this.