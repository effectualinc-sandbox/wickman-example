---
AWSTemplateFormatVersion: '2010-09-09'
Description: LSI P2P zinc EC2s Hosts

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - pVPC
          - pSubnetA
          - pSubnetB
          - pEfsDns
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - pInstanceType
          - pInstanceId1
          - pVolumeSize1
          - pVolumeSize2
          - pCustomerName
          - pApplicationName
          - pEnvironment
          - pGitUrl

    ParameterLabels:
      pVPC:
        default: VPC
      pSubnetA:
        default: Subnet A
      pSubnetB:
        default: Subnet B
      pInstanceType:
        default: Instance Type
      pInstanceId1:
        default: Instance ID 1
      pVolumeSize1:
        default: Volume Size 1
      pVolumeSize2:
        default: Volume Size 2
      pEfsDns:
        default: EFS DNS
      pCustomerName:
        default: Customer
      pApplicationName:
        default: Application Name Tag
      pEnvironment:
        default: Environment
      pGitUrl:
        default: Code URL


Parameters:
  pSubnetA:
    Description: The subnet to launch the instance in to. It must be part of the VPC
      chosen above.
    Type: AWS::EC2::Subnet::Id
  pSubnetB:
    Description: The subnet to launch the instance in to. It must be part of the VPC
      chosen above.
    Type: AWS::EC2::Subnet::Id
  pInstanceType:
    Description: Desired Instance Size
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.large
      - t2.small
  pVolumeSize1:
    Description: Enter the number of GBs you want your volume to be. The minimum value
      is 8 GBs
    Type: Number
    Default: 100
    MinValue: 8
  pVolumeSize2:
    Description: Enter the number of GBs you want your volume to be. The minimum value
      is 8 GBs
    Type: Number
    Default: 100
    MinValue: 8
  pInstanceId1:
    Description: "Do not change this parameter"
    Type: AWS::EC2::Image::Id
    Default: "ami-0d5eff06f840b45e9"
  pVPC:
    Description: VPC Id for deployment
    Type: AWS::EC2::VPC::Id
  pEfsDns:
    Description: EFS DNS
    Type: String
    Default: "fs-d83a425b.efs.us-east-1.amazonaws.com"
  pEnvironment:
    Type: String
    Description: "Environment tag representing Production, Development, QA, Staging, or DR"
    AllowedValues:
      - Production
      - Development
      - QA
      - Stage
      - DR
    Default: DR
  pGitUrl:
    Type: String
    Description: The Project URL for the template
    Default: "https://gitlab.com/effectualinc/proserv/logicsource/p2p/p2p"
  pApplicationName:
    Description: "Required: Application name used for tagging resources"
    Type: String
    Default: "p2p"
  pCustomerName:
    Type: String
    Description: "Customer name for tagging resources"
    Default: "logicsource"

Rules:
  SubnetInVPC:
    Assertions:
      - Assert: !EachMemberIn
          - !ValueOfAll
            - AWS::EC2::Subnet::Id
            - VpcId
          - !RefAll "AWS::EC2::VPC::Id"
        AssertDescription: All subnets must in the VPC

Resources:

  rP2pSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: P2P security group
      VpcId: !Ref pVPC
      SecurityGroupIngress:
        - IpProtocol: TCP
          CidrIp: 10.1.0.0/16
          FromPort: 443
          ToPort: 443
          Description: Inbound HTTPS from VPC
        - IpProtocol: TCP
          CidrIp: 10.1.0.0/16
          FromPort: 80
          ToPort: 80
          Description: Inbound HTTP from VPC
        - IpProtocol: TCP
          CidrIp: 10.1.0.0/16
          FromPort: 22
          ToPort: 22
          Description: Inbound HTTP from VPC
        - IpProtocol: TCP
          CidrIp: 192.168.32.0/22
          FromPort: 443
          ToPort: 443
          Description: Inbound HTTPS from Workspaces VPC
        - IpProtocol: TCP
          CidrIp: 192.168.32.0/22
          FromPort: 80
          ToPort: 80
          Description: Inbound HTTP from Workspaces VPC
        - IpProtocol: TCP
          CidrIp: 192.168.32.0/22
          FromPort: 22
          ToPort: 22
        - IpProtocol: TCP
          CidrIp: 192.168.32.0/22
          FromPort: 38443
          ToPort: 38443
          Description: Inbound HTTPS from Workspaces VPC
        - IpProtocol: '-1'
          CidrIp: 192.168.32.0/22
          FromPort: '-1'
          ToPort: '-1'
        - IpProtocol: TCP
          CidrIp: 192.168.32.0/22
          FromPort: 38080
          ToPort: 38080
          Description: Inbound HTTP from Workspaces VPC
        - IpProtocol: TCP
          CidrIp: 192.168.32.0/22
          FromPort: 18443
          ToPort: 18443
          Description: Inbound HTTPS from Workspaces VPC
        - IpProtocol: TCP
          CidrIp: 192.168.32.0/22
          FromPort: 18080
          ToPort: 18080
          Description: Inbound HTTP from Workspaces VPC
        - IpProtocol: TCP
          CidrIp: 192.168.16.0/20
          FromPort: 443
          ToPort: 443
          Description: Inbound HTTPS from DR VPC
        - IpProtocol: TCP
          CidrIp: 192.168.16.0/20
          FromPort: 80
          ToPort: 80
          Description: Inbound HTTP from DR VPC
        - IpProtocol: TCP
          CidrIp: 192.168.16.0/20
          FromPort: 22
          ToPort: 22
          Description: Inbound HTTP from DR VPC
        - IpProtocol: TCP
          CidrIp: 10.1.0.0/16
          FromPort: 38443
          ToPort: 38443
          Description: Inbound from ALB in logicsource.net
        - IpProtocol: TCP
          CidrIp: 10.1.0.0/16
          FromPort: 18443
          ToPort: 18443
          Description: Inbound from ALB in onemarket
        - IpProtocol: TCP
          CidrIp: 10.1.0.0/16
          FromPort: 18080
          ToPort: 18080
          Description: Inbound from ALB in onemarket
        - IpProtocol: TCP
          CidrIp: 10.1.0.0/16
          FromPort: 38080
          ToPort: 38080
          Description: Inbound from ALB in logicsource.net
      SecurityGroupEgress:
        - Description: Outbound unrestricted traffic
          IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: EC2-p2p-SecurityGroup
        - Key: Customer
          Value: !Ref pCustomerName
        - Key: Environment
          Value: !Ref pEnvironment
        - Key: Code Uri
          Value: !Ref pGitUrl
        - Key: Application
          Value: !Ref pApplicationName

  rProApp1Ec2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref pInstanceId1
      InstanceType: !Ref pInstanceType
      Monitoring: true
      IamInstanceProfile: !Ref rEc2p2pProfile
      SourceDestCheck: true
      SubnetId: !Ref pSubnetA
      SecurityGroupIds:
        - !Ref rP2pSg
        - sg-05b8381f91898fbcc
        - sg-075a57077aaadd17d
      BlockDeviceMappings:
      - DeviceName: "/dev/xvda"
        Ebs:
          VolumeSize: !Ref pVolumeSize1
          Encrypted: true
      Tags:
        - Key: Name
          Value: "p2papp-zinc-ec2.logicsource.com"
        - Key: Customer
          Value: !Ref pCustomerName
        - Key: Environment
          Value: !Ref pEnvironment
        - Key: Code Uri
          Value: !Ref pGitUrl
        - Key: Application
          Value: !Ref pApplicationName
        - Key: allowChangeState
          Value: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          setenforce permissive
          cd /root/
          yum install git -y
          ## EFS Setup
          mkdir -p /usr/local/fileshare
          echo "${pEfsDns}:/ /usr/local/fileshare nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev 0 0" >> /etc/fstab
          mount -a

  rEc2p2pRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub p2p-${AWS::StackName}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
      - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy

  rEc2p2pProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub "p2p-IP-${AWS::StackName}"
      Path: /
      Roles:
      - !Ref rEc2p2pRole

Outputs:
  oInstanceId:
    Description: Resource ID of the newly created EC2 instance
    Value: !Ref rProApp1Ec2